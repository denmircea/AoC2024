#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
using namespace std;

ifstream fin("test.in");
ifstream fin2("test2.in");
vector<string>v;
set<pair<int,int>> aj;

int dfs(int i, int j, int curr) {
	if (i < 0 || j < 0 || i >= v.size() || j >= v[0].size() || v[i][j] != curr) {
		return 0;
	}
	if (curr == 9) {
		aj.insert({ i,j });
		return 1;
	}
	int res = 0;
	res += dfs(i + 1, j, curr + 1);
	res += dfs(i - 1, j, curr + 1);
	res += dfs(i, j + 1, curr + 1);
	res += dfs(i, j - 1, curr + 1);
	return res;
}
int main() {
	string s;
	while (fin >> s) {
		v.push_back(s);
	}
	for (int i = 0;i < v.size();i++) {
		for (int j = 0;j < v[0].size();j++) {
			v[i][j] -= '0';
		}
	}
	int res = 0;
	for (int i = 0;i < v.size();i++) {
		for (int j = 0;j < v[0].size();j++) {
			if (v[i][j] == 0) {
				aj.clear();
				 res+=dfs(i, j, 0);
				 //res += aj.size();
			}
		}
	}
	cout << res;
	return 0;
}
